package com.gj.exercise_5;

import java.util.Arrays;

public class Exercise_33 {


//    public int cutRope(int target) {
//        int[] dp = new int[target+1];
//        dp[1] = 1;
//        dp[2] = 2;
//        dp[3] = 3;
//        for (int i = 1; i <= target; i++) {
//            for (int j = 1; j <= i/2; j++) {
//                dp[i] = Math.max(dp[i],dp[j]*dp[i-j]);
//            }
//        }
//        return dp[target];
//    }

    public static void main(String[] args) {
        int [] arr = new int[]{8504,3320,23905,2662,22664,9423,28869,11825,28558,7148,19126,1941,20581,20705,15666,24492,11508,26196,1064,7026,21867,6683,9256,1381,28558,20219,22649,13723,4209,7250,29515,11299,16277,8467,12719,18511,10738,14962,1731,20530,24421,23023,1651,20838,29084,5079,10429,8320,10816,6329,8195,24616,24691,11686,1559,24387,1643,9948,19618,5762,9309,26739,7398,8960,23582,24088,5078,21879,6054,16410,2194,21251,15750,24435,2535,21163,5308,12824,26918,17388,5940,18452,7892,24391,5554,1105,12755,25981,8861,15864,13055,13882,18767,13467,13916,12447,3691,19184,23966,4116,77,17455,473,4221,16873,11983,11787,15531,8461,12013,12870,12582,3416,22238,14658,13576,27248,24934,4275,925,11470,14697,13816,28745,4077,5234,1540,18890,20436,25761,4080,5423,16416,19178,13361,1704,6165,23067,16838,7231,16519,16813,17269,17623,19124,26414,1350,14739,19509,7293,15760,25225,3669,5574,3092,20504,2305,2192,11559,343,17441,8645,25476,9584,6262,7474,3857,4204,29444,25359,8912,13279,27490,23264,17610,7078,15568,20028,10760,16912,18665,1756,16306,1626,18090,25000,15675,19711,3441,2126,6412,29327,24986,18196,1105,8606,25478,26319,15362,13488,7693,10372,20755,26723,182,3374,638,22509,20357,688,6703,231,10516,18237,20928,15400,6629,20470,11014,14678,5591,10179,3868,28714,20167,24548,21936,26179,27002,19594,20123,25742,12584,12049,6453,26819,19595,2480,25928,24098,13641,29299,4819,16687,4782,11512,13587,10043,19950,27896,9405,16949,4826,11975,13551,14736,16273,10031,8440,8517,233,18746,10101,20908,5709,78,6670,15382,16650,1901,21937,28174,5621,1212,13965,29441,22288,14595,29618,16283,21597,9158,2359,21923,21186,21347,12812,104,24606,17821,3554,7949,22826,8055,24824,13923,12420,18932,855,19558,14505,21101,18672,27017,5474,7156,9605,10837,25072,28152,28326,1039,11162,11353,3949,28441,24407,23182,13388,23612,4695,8276,12677,15859,28823,4778,26299,8603,15494,23290,2424,9753,20097,6601,26366,23707,27254,7265,27906,6835,22151,18350,25142,11472,27150,1816,13238,8991,8960,2592,5062,17090,29557,21854,29418,14239,12679,25417,29750,22347,13721,25176,3736,136,20987,21624,24307,20380,10043,8797,21469,2899,19886,29758,25291,4486,19711,24091,28939,24093,22439,15922,3811,12899,7326,14162,16169,24825,6274,29727,7458,925,15350,5142,15872,24394,20861,9378,470,17123,7719,29584,20733,22204,24779,24639,1660,28105,10630,17387,25780,3579,4340,20315,11066,967,9772,19529,21977,6888,18416,9713};
        System.out.println(MLS(arr));

    }


    public static int MLS (int[] arr) {
        // write code here
        Arrays.sort(arr);

        int[] dp = new int[arr.length];
        int res = 0;
        dp[0] = 1;
        for(int i=1;i<arr.length;i++){
            if(arr[i]-arr[i-1]==1){
                dp[i] = dp[i-1]+1;
                res = Math.max(dp[i],res);
            }else{
                dp[i]=1;
            }
        }
        return res;
    }
}

